# Create the base OS image
FROM ruby:3.1.2 AS base

# ENV/ARG PATH
ARG APP_ROOT="/home/local/app"
ARG CONDA_PREFIX="/home/local/miniconda3"
ARG CONDA_PATH="${CONDA_PREFIX}/bin/conda"
ENV PATH="${CONDA_PREFIX}/bin:${PATH}"

# ffmepg installation
RUN apt-get -y update \
    && apt-get -y upgrade \
    && apt-get install -y --no-install-recommends ffmpeg

# Update the OS ubuntu image
RUN apt-get install -y wget \
    && apt-get install -y sqlite3 \
    && apt-get install -y zip \
    && apt-get install -y python3-opencv

# Redis installation
RUN apt-get install -y lsb-release \
    && curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list \
    && apt-get -y update \
    && apt-get install -y redis \
    && rm -rf /var/lib/apt/lists/*

# Miniconda installation
RUN wget -q \
    https://repo.anaconda.com/miniconda/Miniconda3-py38_4.12.0-Linux-x86_64.sh \
    && bash Miniconda3-py38_4.12.0-Linux-x86_64.sh -b -p ${CONDA_PREFIX} \
    && rm -f Miniconda3-py38_4.12.0-Linux-x86_64.sh 

# Set wkdir & Install required packages
RUN mkdir -p $APP_ROOT
WORKDIR $APP_ROOT
COPY ./src/ $APP_ROOT
RUN gem install rails && bundle install

# Set user permission
ENV SETUSER myuser
RUN useradd -m $SETUSER \
    && chown -R $SETUSER:$SETUSER $APP_ROOT \
    && chown -R $SETUSER:$SETUSER $CONDA_PREFIX
USER $SETUSER

# Set conda mediapipe environment (time consuming step)
COPY environment.yml .
RUN ${CONDA_PATH} update conda && ${CONDA_PATH} env create -f environment.yml

# Clean cache and Entry with conda mediapipe env
RUN rails tmp:cache:clear && rails db:migrate
# SHELL ["conda", "run", "-n", "mediapipe", "/bin/bash", "-c"]
# CMD ["foreman", "s"]
EXPOSE 3000
ENTRYPOINT ["conda", "run", "--no-capture-output", "-n", "mediapipe"]